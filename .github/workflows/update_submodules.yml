name: Submodule Update Workflow

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs every Sunday at midnight
    - cron: '0 0 * * 3'  # Runs every Wednesday at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-submodules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.DB_PAT }}  # Use the DB_PAT for submodule access

      - name: Create and Update Submodule Branch
        id: update_branch
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git fetch origin master
          git checkout -B submodule-update-branch origin/master
          git submodule update --remote
          git add .
          if git diff --cached --quiet; then
            echo "No changes to commit."
            echo "changes_found=false" >> $GITHUB_ENV  # Set an environment variable
            exit 0
          else
            git commit -m "Automated submodule update"
            echo "changes_found=true" >> $GITHUB_ENV  # Set an environment variable
          fi

      - name: Push Changes
        if: ${{ env.changes_found == 'true' }}
        run: |
          git push origin submodule-update-branch --force || echo "Failed to push changes"

      - name: Check for Existing Pull Request
        id: check_pr
        if: ${{ env.changes_found == 'true' }}
        env:
          DB_TOKEN: ${{ secrets.DB_PAT }}
        run: |
          response=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $DB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/pulls)
          
          pr_number=$(echo "$response" | jq -r --arg branch "submodule-update-branch" '.[] | select(.head.ref == $branch) | .number')
          if [ -n "$pr_number" ]; then
            echo "Existing pull request found: $pr_number"
            echo "pr_number=$pr_number" >> $GITHUB_ENV
          else
            echo "No existing pull request found."
          fi

      - name: Create Pull Request
        if: ${{ env.changes_found == 'true' && env.pr_number == '' }}
        env:
          DB_TOKEN: ${{ secrets.DB_PAT }}
        run: |
          response=$(curl --http1.1 \
            -L \
            -X POST -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $DB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d '{"title":"Automated Submodule Update","body":"This pull request updates the submodules to their latest versions.","head":"submodule-update-branch","base":"master"}'
          )
          
          echo "$response"

          if [[ $(echo "$response" | jq -r '.id') == "null" ]]; then
            echo "Failed to create pull request."
            exit 1
          fi

      - name: Update Existing Pull Request
        if: ${{ env.changes_found == 'true' && env.pr_number != '' }}
        env:
          DB_TOKEN: ${{ secrets.DB_PAT }}
          PULL_NUMBER: ${{ env.pr_number }}
        run: |
          response=$(curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $DB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/pulls/$PULL_NUMBER \
            -d '{"title":"Automated Submodule Update","body":"This pull request updates the submodules to their latest versions.","state":"open"}'
          )
          
          echo "$response"

          if [[ $(echo "$response" | jq -r '.id') == "null" ]]; then
            echo "Failed to update pull request."
            exit 1
          fi
